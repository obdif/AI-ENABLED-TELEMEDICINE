{/* Recent Patients */}
            <div className="bg-white rounded-lg shadow-sm border border-gray-200">
              <div className="px-6 py-4 border-b border-gray-200">
                <h3 className="text-lg font-semibold text-gray-900">Recent Patients</h3>
              </div>
              <div className="p-6">
                <div className="space-y-3">
                  {loading && patients.length === 0 ? (
                    <p className="text-gray-500">Loading recent patients...</p>
                  ) : error && patients.length === 0 ? (
                    <p className="text-red-600">Error loading recent patients.</p>
                  ) : patients.length === 0 ? (
                    <p className="text-gray-500 text-center">No recent patients found.</p>
                  ) : (
                    patients
                      .slice() // Create a shallow copy to avoid modifying the original state directly
                      .sort((a, b) => {
                        // Priority 1: updatedAt (most recent activity)
                        const dateAUpdatedAt = a.updatedAt ? new Date(a.updatedAt).getTime() : 0;
                        const dateBUpdatedAt = b.updatedAt ? new Date(b.updatedAt).getTime() : 0;

                        if (dateAUpdatedAt !== dateBUpdatedAt) {
                          return dateBUpdatedAt - dateAUpdatedAt; // Sort descending by updatedAt
                        }

                        // Priority 2: createdAt (if updatedAt is same or missing, use creation date)
                        const dateACreatedAt = a.createdAt ? new Date(a.createdAt).getTime() : 0;
                        const dateBCreatedAt = b.createdAt ? new Date(b.createdAt).getTime() : 0;

                        if (dateACreatedAt !== dateBCreatedAt) {
                          return dateBCreatedAt - dateACreatedAt; // Sort descending by createdAt
                        }

                        // Fallback: _id (as a very last resort, though less reliable for "latest" than timestamps)
                        // MongoDB _id contains a timestamp at its beginning.
                        const idDateA = new Date(parseInt(a._id.substring(0, 8), 16) * 1000).getTime();
                        const idDateB = new Date(parseInt(b._id.substring(0, 8), 16) * 1000).getTime();
                        return idDateB - idDateA; // Sort descending by _id creation time
                      })
                      .slice(0, 3) // Display only top 3 of the sorted patients
                      .map((patient) => (
                        <div key={patient._id} className="flex items-center justify-between p-3 border border-gray-200 rounded-lg">
                          <div className="flex items-center">
                            <div className="h-10 w-10 bg-gray-200 rounded-full flex items-center justify-center">
                              {patient.image ? (
                                <img src={patient.image} alt={`${patient.fullname}'s profile`} className="w-full h-full rounded-full object-cover" />
                              ) : (
                                <User className="h-5 w-5 text-gray-600" />
                              )}
                            </div>
                            <div className="ml-3">
                              <p className="font-medium text-gray-900">{patient.fullname || patient.username}</p>
                              <p className="text-sm text-gray-600">
                                {/* Display last activity based on updatedAt, then createdAt, then lastConsultationDate */}
                                {patient.updatedAt
                                  ? `Last activity: ${new Date(patient.updatedAt).toLocaleDateString()}`
                                  : patient.createdAt
                                    ? `Added: ${new Date(patient.createdAt).toLocaleDateString()}`
                                    : patient.lastConsultationDate
                                      ? `Last seen: ${new Date(patient.lastConsultationDate).toLocaleDateString()}`
                                      : "N/A"}
                              </p>
                            </div>
                          </div>
                          <Link href={`/doctor-patient-details/${patient.username}`}>
                            <button className="text-blue-600 hover:text-blue-700">
                              <Eye className="h-4 w-4" />
                            </button>
                          </Link>
                        </div>
                      ))
                  )}
                </div>
              </div>
            </div>